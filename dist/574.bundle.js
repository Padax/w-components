(self.webpackChunk_padax_w_components_project=self.webpackChunk_padax_w_components_project||[]).push([[574],{1835:(t,e,r)=>{r.d(e,{zu:()=>a,SO:()=>s.Z,ZP:()=>d,OE:()=>c});var a={};r.r(a),r.d(a,{parseBoolAttr:()=>n,parseIntAttr:()=>i,parseStringAttr:()=>o});var s=r(5359);function i(t,e,r,a){return t=parseInt(t),isNaN(t)||!isNaN(r)&&t<r||!isNaN(a)&&t>a?e:t}function n(t,e){return"true"===t||""===t||"false"!==t&&!!e}function o(t,e,r){return"string"!=typeof t?e:t.match(r)?t:e}class l extends HTMLElement{static getObservedAttributes(t){const e=Object.keys(t).filter((e=>!1!==t[e].observed)).map((e=>t[e].name));return Array.isArray(e)?e:[]}constructor(){super(),this.createGettersAndSetters(),this.attachShadow({mode:"open"}),this.setStylesheet(this.stylesheet),this.init(),this.key=(new Date).getTime()+Math.random()}attributeChangedCallback(t,e,r){e!==r&&this.key&&this.hasDefinedAttribute(t)&&this.update({name:t,oldValue:e,newValue:r})}createGettersAndSetters(){Array.isArray(this.constructor.observedAttributes)&&this.constructor.observedAttributes.forEach((t=>{Object.defineProperty(this,t,{get:()=>this.parseAttributeValueByName(t,this.getAttribute(t)),set:e=>{this.setAttribute(t,this.parseAttributeValueByName(t,`${e}`))}})}))}equals(t){return this.key===t.key}getAttributeParserByName(t){if("string"==typeof t)return"function"!=typeof this.constructor.attributes[t].parser?e=>"string"==typeof e?e:this.constructor.attributes[t].defaultValue:this.constructor.attributes[t].parser}getDefaultAttributeValueByName(t){if("string"==typeof t)return this.constructor.attributes[t].defaultValue}hasDefinedAttribute(t){return"string"==typeof t&&"object"==typeof this.constructor.attributes[t]}parseAttributeValueByName(t,e){return this.getAttributeParserByName(t)(e,this.constructor.attributes[t])}setStylesheet(t,e){if(e){e=`w-stylesheet-${e}`;const r=this.shadowRoot.querySelector(`#${e}`);r?s.Z.modify(r,{props:{textContent:t}}):s.Z.create("style",{props:{textContent:t,id:e}},this.shadowRoot)}else s.Z.create("style",{props:{textContent:t}},this.shadowRoot)}update(){}}function c(t){let e="w";return window.wconfig&&"string"==typeof window.wconfig.prefix&&(e=window.wconfig.prefix),`${e}-${t}`}const d=l},8574:(t,e,r)=>{r.r(e),r.d(e,{default:()=>i});var a=r(1835);class s extends a.ZP{static tagName="list";static attributes={mark:{name:"mark",defaultValue:"none",parser:(t,e)=>a.zu.parseStringAttr(t,e.defaultValue,/^none$|^circle$|^outline-circle$|^number$/)},appearance:{name:"appearance",defaultValue:"normal",parser:(t,e)=>a.zu.parseStringAttr(t,e.defaultValue,/^normal$|^panel$|^divided-panel$/)}};static get observedAttributes(){return this.getObservedAttributes(this.attributes)}constructor(){super()}init(){for(let t=0;t<this.children.length;t++)this.children[t].setAttribute("mark",this.mark),this.children[t].setAttribute("index",t);this.list=a.SO.create("div",{props:{className:"list"},attrs:{appearance:this.appearance}},this.shadowRoot),a.SO.create("slot",{},this.list)}update(t){switch(t.name){case"mark":for(let e=0;e<this.children.length;e++)this.children[e].setAttribute("mark",t.newValue),this.children[e].setAttribute("index",e);break;case"appearance":a.SO.modify(this.list,{attrs:{appearance:t.newValue}})}}}s.prototype.stylesheet="\n  :host {\n    display: block;\n  }\n  div.list{\n    margin:1rem 0px;\n  }\n  div.list[appearance$='panel']{\n    border:1px solid var(--color-gray-20);\n    border-radius:4px;\n  }\n  div.list>::slotted(*){\n    display:flex;align-items:center;\n    padding:0.5rem;\n  }\n  div.list[appearance='divided-panel']>::slotted(*){\n    border-bottom:1px solid var(--color-gray-20);\n  }\n  div.list[appearance$='panel']>::slotted(*:hover){\n    background-color:var(--color-gray-10);\n  }\n  div.list[appearance$='panel']>::slotted(*:active){\n    background-color:var(--color-gray-20);\n  }\n  div.list[appearance$='panel']>::slotted(*[disabled]){\n    pointer-events:none;\n    color:var(--color-gray-40);\n  }\n  div.list[appearance$='panel']>::slotted(*[disabled]:hover),\n  div.list[appearance$='panel']>::slotted(*[disabled]:active){\n    background-color:initial;\n  }\n  div.list>::slotted(*:last-child){\n    border-bottom-width:0px;\n  }\n";const i=s}}]);